[WARNING] [options] bootstrap class path not set in conjunction with -source 8
[WARNING] /var/data/workspace/Codingstyle/src/main/java/edu/hm/hafner/util/FilteredLog.java:[23,32] [InlineFormatString] Prefer to create format strings inline, instead of extracting them to a single-use constant
    (see https://errorprone.info/bugpattern/InlineFormatString)
  Did you mean to remove this line?
[WARNING] /var/data/workspace/Codingstyle/src/main/java/edu/hm/hafner/util/FilteredLog.java:[183,15] [HashCodeToString] Classes that override hashCode should also consider overriding toString.
    (see https://errorprone.info/bugpattern/HashCodeToString)
[WARNING] /var/data/workspace/Codingstyle/src/main/java/edu/hm/hafner/util/TreeStringBuilder.java:[91,17] [BadImport] Importing nested classes/static methods/static fields with commonly-used names can make code harder to read, because it may not be clear from the context exactly which type is being referred to. Qualifying the name with that of the containing class can make the code clearer. Here we recommend using qualified class: Map.
    (see https://errorprone.info/bugpattern/BadImport)
  Did you mean 'for (Map.Entry<String, Child> entry : children.entrySet()) {'?
[WARNING] /var/data/workspace/Codingstyle/src/test/java/edu/hm/hafner/util/SerializableTest.java:[72,43] [BanSerializableRead] Deserializing user input via the `Serializable` API is extremely dangerous
    (see https://errorprone.info/bugpattern/BanSerializableRead)
[INFO]

[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ codingstyle ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 34 source files to /var/data/workspace/Codingstyle/target/test-classes
[WARNING] [options] bootstrap class path not set in conjunction with -source 8
[WARNING] /var/data/workspace/Codingstyle/target/generated-test-sources/assertj-assertions/edu/hm/hafner/util/assertions/Assertions.java:[84,99] [rawtypes] found raw type: ObjectCondition
  missing type arguments for generic class ObjectCondition<T>
  where T is a type-variable:
    T extends Object declared in class ObjectCondition
[WARNING] /var/data/workspace/Codingstyle/target/generated-test-sources/assertj-assertions/edu/hm/hafner/util/EnsureObjectConditionAssert.java:[9,105] [rawtypes] found raw type: ObjectCondition
  missing type arguments for generic class ObjectCondition<T>
  where T is a type-variable:
    T extends Object declared in class ObjectCondition
[WARNING] /var/data/workspace/Codingstyle/target/generated-test-sources/assertj-assertions/edu/hm/hafner/util/EnsureObjectConditionAssert.java:[15,43] [rawtypes] found raw type: ObjectCondition
  missing type arguments for generic class ObjectCondition<T>
  where T is a type-variable:
    T extends Object declared in class ObjectCondition
[WARNING] /var/data/workspace/Codingstyle/target/generated-test-sources/assertj-assertions/edu/hm/hafner/util/EnsureObjectConditionAssert.java:[26,61] [rawtypes] found raw type: ObjectCondition
  missing type arguments for generic class ObjectCondition<T>
  where T is a type-variable:
    T extends Object declared in class ObjectCondition
[WARNING] /var/data/workspace/Codingstyle/target/generated-test-sources/assertj-assertions/edu/hm/hafner/util/assertions/SoftAssertions.java:[83,92] [rawtypes] found raw type: ObjectCondition
  missing type arguments for generic class ObjectCondition<T>
  where T is a type-variable:
    T extends Object declared in class ObjectCondition
